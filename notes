int		create_trgb(int r, int g, int b)
{
	return(r << 16 | g << 8 | b);
}

give number ut of create trgb t ipixel calculator

int     main(void)
{
    printf("%i", create_trgb(10, 15, 20));
    return(0);
}

int     main(void)
{
    void    *mlx;
    void    *img;
    // void    *mlx_win;

    mlx = mlx_init();
    img = mlx_new_image(mlx, 1920, 1080);
    // mlx_win = mlx_new_window(mlx, 1920, 1080, "Hello world!");
    // mlx_loop(mlx);
}

gdb ./cube

run

bt

void     get_size_map(t_struct_m *main, char *map)
{
    int     x;
    int     i;
    int     b;

    x = 0;
    i = 0;
    b = 0;
    //first check if there is anything uncommon in there, if so, skip line
    //second check if the line starts
    if (map[x] != '\0' || map[x] != '\n')
    {
        while (map[i] != '\0' || map[i] != '\n')//check if after the inputs, somthign that shouldn't be there is removed.
        {
            while (map[i] == ' ')
                i++;
            if (map[i] == 'N' || map[i] == 'S' || map[i] == 'E' || map [i] == 'W')
            {

                b = ft_check_news(main, map);
                break ;
            }
            // else if (map[i] == '\0' || map[i] == '\n')
            //     break ;
            else if (map[i] != '1' || map[i] != '0')//symbols allowed in map
            {
                printf("c: [%c]\n", map[i]);
                b = 1;
                break ;
            }
            i++;
        }
        printf("c3 %d\n", b);
        if (b == 1)//check if this also happens with empty lines
        {
            printf("hello\n");
            main->place->error = 12;
            ft_error(main);
        }
        else if (b == 0)
        {
            main->place->mapp = 0;
            while(map[x] != '\0' || map[x] != '\n')
            {
                while (map[x] == ' ')
                    x++;
                if (map[x] == '1' && main->place->mapp == 0)//check for a 1 in the loop
                {
                    if (main->place->mapp == 0)
                        main->place->mapp = 1;
                    ft_map_line(main, map);
                    break ;
                }
                else if (map[x] == '1' && main->place->mapp == 1)
                {
                    ft_map_line(main, map);
                    break ;
                }  
            }
        }       
    }